{"ast":null,"code":"import _objectSpread from\"/Users/aarushichoudhary/Internship/calculator-new/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";//import logo from './logo.svg';\nimport{useEffect}from'react';import'./App.css';import React,{useState}from\"react\";import Calculator from\"./components/CalculatorBody\";import Screen from\"./components/screen\";import Button from\"./components/button\";import ButtonBox from\"./components/buttonBox\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const btnValues=[[\"AC\",\"+-\",\"%\",\"/\"],[7,8,9,\"X\"],[4,5,6,\"-\"],[1,2,3,\"+\"],[0,\".\",\"=\"]];function App(){let[calc,setCalc]=useState({sign:\"\",num:\"0\",res:\"0\"});const numberClickHandler=value=>{setCalc(prevCalc=>{if(prevCalc.num.length>=16)return prevCalc;return _objectSpread(_objectSpread({},prevCalc),{},{num:prevCalc.num===\"0\"&&value===\"0\"?\"0\":prevCalc.num===\"0\"?value:prevCalc.num+value,res:!prevCalc.sign?\"\":prevCalc.res});});};const decimalClickHandler=value=>{setCalc(prevCalc=>_objectSpread(_objectSpread({},prevCalc),{},{num:!prevCalc.num.toString().includes(\".\")?prevCalc.num+value:prevCalc.num}));};const signClickHandler=value=>{setCalc(prevCalc=>({sign:value,num:\"\",res:prevCalc.num&&!prevCalc.res?prevCalc.num:prevCalc.res||\"0\"}));};const equalsClickHandler=()=>{setCalc(prevCalc=>{if(prevCalc.sign&&prevCalc.num){const math=(a,b,sign)=>{switch(sign){case\"+\":return a+b;case\"-\":return a-b;case\"X\":return a*b;case\"/\":return b===0?\"Can't divide with 0\":a/b;default:return b;}};const result=math(Number(prevCalc.res),Number(prevCalc.num),prevCalc.sign);return{sign:\"\",num:\"\",res:result.toString()};}return prevCalc;});};const invertClickHandler=()=>{setCalc(_objectSpread(_objectSpread({},calc),{},{num:calc.num?calc.num*-1:0,res:calc.res?calc.res*-1:0,sign:\"\"}));};const percentClickHandler=()=>{if(calc.num){const percent=Number(calc.num)/100;setCalc(_objectSpread(_objectSpread({},calc),{},{num:percent.toString()}));}};const resetClickHandler=()=>{setCalc({sign:\"\",num:\"\",res:\"\"});};useEffect(()=>{const handleKeyDown=event=>{const key=event.key;if(!isNaN(key)){//isNaN returns true if the string is not a number, so !isNaN will give true if it is a number. \nnumberClickHandler(key);}else if(key===\".\"){decimalClickHandler(\".\");}else if(key===\"+\"||key===\"-\"||key===\"*\"||key===\"/\"){const op=key===\"*\"?\"X\":key;// mapping * to X\nsignClickHandler(op);}else if(key===\"%\"){if(calc.num){const percent=Number(calc.num)/100;//parseFloat converts a string into a float number. \nsetCalc(prev=>_objectSpread(_objectSpread({},prev),{},{num:percent.toString()}));}}else if(key===\"Enter\"||key===\"=\"){equalsClickHandler();}else if(key===\"c\"||key===\"C\"){resetClickHandler();}};window.addEventListener(\"keydown\",handleKeyDown);return()=>window.removeEventListener(\"keydown\",handleKeyDown);},[calc.num]);return/*#__PURE__*/_jsxs(Calculator,{children:[/*#__PURE__*/_jsx(Screen,{value:(calc.num!==\"\"?calc.num:calc.res)||\"0\"}),/*#__PURE__*/_jsxs(ButtonBox,{children:[\" \",btnValues.flat().map((btn,i)=>/*#__PURE__*/_jsx(Button,{className:btn===\"=\"?\"equals\":\"\",value:btn,onClick:()=>btn===\"AC\"?resetClickHandler():btn===\"+-\"?invertClickHandler():btn===\"%\"?percentClickHandler():btn===\"=\"?equalsClickHandler():btn===\"/\"||btn===\"X\"||btn===\"-\"||btn===\"+\"?signClickHandler(btn):btn===\".\"?decimalClickHandler(btn):numberClickHandler(btn)},i))]})]});};export default App;","map":{"version":3,"names":["useEffect","React","useState","Calculator","Screen","Button","ButtonBox","jsx","_jsx","jsxs","_jsxs","btnValues","App","calc","setCalc","sign","num","res","numberClickHandler","value","prevCalc","length","_objectSpread","decimalClickHandler","toString","includes","signClickHandler","equalsClickHandler","math","a","b","result","Number","invertClickHandler","percentClickHandler","percent","resetClickHandler","handleKeyDown","event","key","isNaN","op","prev","window","addEventListener","removeEventListener","children","flat","map","btn","i","className","onClick"],"sources":["/Users/aarushichoudhary/Internship/calculator-new/Calculator/src/App.js"],"sourcesContent":["//import logo from './logo.svg';\nimport { useEffect } from 'react';\nimport './App.css';\nimport React, { useState } from \"react\";\n\nimport Calculator from \"./components/CalculatorBody\";\nimport Screen from \"./components/screen\";\nimport Button from \"./components/button\";\nimport ButtonBox from \"./components/buttonBox\";\n\n\nconst btnValues = [\n  [\"AC\", \"+-\", \"%\", \"/\"],\n  [7, 8, 9, \"X\"],\n  [4, 5, 6, \"-\"],\n  [1, 2, 3, \"+\"],\n  [0, \".\", \"=\"],\n];\n\nfunction App() {\n  let [calc, setCalc] = useState({\n    sign: \"\",\n    num: \"0\",\n    res: \"0\",\n  });  \n\n  const numberClickHandler = (value) => {\n    setCalc((prevCalc) => {\n      if (prevCalc.num.length >= 16) return prevCalc;\n  \n      return {\n        ...prevCalc,\n        num:\n          prevCalc.num === \"0\" && value === \"0\"\n            ? \"0\"\n            : prevCalc.num === \"0\"\n            ? value\n            : prevCalc.num + value,\n        res: !prevCalc.sign ? \"\" : prevCalc.res,\n      };\n    });\n  };\n  \n  const decimalClickHandler = (value) => {\n    setCalc((prevCalc) => ({\n      ...prevCalc,\n      num: !prevCalc.num.toString().includes(\".\")\n        ? prevCalc.num + value\n        : prevCalc.num,\n    }));\n  };\n  \n  const signClickHandler = (value) => {\n    setCalc((prevCalc) => ({\n      sign: value,\n      num: \"\",\n      res: prevCalc.num && !prevCalc.res ? prevCalc.num : prevCalc.res || \"0\",\n    }));\n  };\n\n  const equalsClickHandler = () => {\n    setCalc((prevCalc) => {\n      if (prevCalc.sign && prevCalc.num) {\n        const math = (a, b, sign) => {\n          switch (sign) {\n            case \"+\": return a + b;\n            case \"-\": return a - b;\n            case \"X\": return a * b;\n            case \"/\": return b === 0 ? \"Can't divide with 0\" : a / b;\n            default: return b;\n          }\n        };\n  \n        const result = math(\n          Number(prevCalc.res),\n          Number(prevCalc.num),\n          prevCalc.sign\n        );\n  \n        return {\n          sign: \"\",\n          num: \"\",\n          res: result.toString(),\n        };\n      }\n      return prevCalc;\n    });\n  };\n  \n\n  const invertClickHandler = () => {\n    setCalc({\n      ...calc,\n      num: calc.num ? calc.num * -1 : 0,\n      res: calc.res ? calc.res * -1 : 0,\n      sign: \"\",\n    });\n  };\n\n  const percentClickHandler = () => {\n    if (calc.num) {\n      const percent = Number(calc.num) / 100;\n      setCalc({\n        ...calc,\n        num: percent.toString(),\n      });\n    }\n  };\n\n  const resetClickHandler = () => {\n    setCalc({\n      sign: \"\",\n      num: \"\",\n      res: \"\",\n    });\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      const key = event.key;\n  \n      if (!isNaN(key)) {               //isNaN returns true if the string is not a number, so !isNaN will give true if it is a number. \n        numberClickHandler(key);\n      } else if (key === \".\") {\n        decimalClickHandler(\".\");\n      } else if (key === \"+\" || key === \"-\" || key === \"*\" || key === \"/\") {\n        const op = key === \"*\" ? \"X\" : key; // mapping * to X\n        signClickHandler(op);\n      } else if (key === \"%\") {\n        if (calc.num) {\n          const percent = Number(calc.num) / 100;       //parseFloat converts a string into a float number. \n          setCalc((prev) => ({\n            ...prev,\n            num: percent.toString(),\n          }));\n        }\n      } else if (key === \"Enter\" || key === \"=\") {\n        equalsClickHandler();\n      } else if (key === \"c\" || key === \"C\") {\n        resetClickHandler();\n      }\n    };\n  \n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [calc.num]); \n\n\n  return (\n    <Calculator>\n    <Screen value={(calc.num !== \"\" ? calc.num : calc.res) || \"0\"} />\n    <ButtonBox> {\n    btnValues.flat().map((btn, i) => (\n      <Button\n        key={i}\n        className={btn === \"=\" ? \"equals\" : \"\"}\n        value={btn}\n        onClick={() =>\n          btn === \"AC\"\n            ? resetClickHandler()\n            : btn === \"+-\"\n            ? invertClickHandler()\n            : btn === \"%\"\n            ? percentClickHandler()\n            : btn === \"=\"\n            ? equalsClickHandler()\n            : btn === \"/\" || btn === \"X\" || btn === \"-\" || btn === \"+\"\n            ? signClickHandler(btn)\n            : btn === \".\"\n            ? decimalClickHandler(btn)\n            : numberClickHandler(btn)\n        }\n        />\n      ))\n      }\n      </ButtonBox>\n    </Calculator>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}